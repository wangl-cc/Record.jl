name: CI

on:
  push:
    branches:
      - master
    paths-ignore:
      - "**README*"
      - "**LICENSE*"
      - "**.gitignore"
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    paths-ignore:
      - "**README*"
      - "**LICENSE*"
      - "**.gitignore"

jobs:
  build:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        version:
          - "1.0"
          - "1" # latest stable 1.x release of Julia
          - nightly
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        arch:
          - x64
          - x86
        # 32-bit Julia binaries are not available on macOS
        exclude:
          - os: macOS-latest
            arch: x86

    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@latest
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/julia-buildpkg@latest
        env:
          PYTHON: ""
      - uses: julia-actions/julia-runtest@latest
        env:
          PYTHON: ""
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v1
        with:
          file: ./lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
  format:
    name: Format Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install JuliaFormatter
        run: |
          julia -e 'using Pkg; Pkg.add("JuliaFormatter")'
      - name: Format Code
        run: |
          julia -e '
          using JuliaFormatter
          if format(".")
              exit(0)
          else
              exit(1)
          end
          '
      - name: Create pull request
        id: cpr
        if: ${{ failure() }}
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'style: format *.jl files'
          title: 'JuliaFormatter.jl format'
          branch: auto-juliaformatter-pr
          delete-branch: true
          labels: formatting, automated pr, no changelog
      - name: Chech outputs
        if: ${{ failure() }}
        run: |
          echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
          echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"

# vim:ts=2:sw=2
