name: CI

on:
  push:
    branches:
      - master
    paths-ignore:
      - "**README*"
      - "**LICENSE*"
      - "**.gitignore"
  pull_request:
    paths-ignore:
      - "**README*"
      - "**LICENSE*"
      - "**.gitignore"

jobs:
  build:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        version:
          - "1.0"
          - "1" # latest stable 1.x release of Julia
          - nightly
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        arch:
          - x64
          - x86
        # 32-bit Julia binaries are not available on macOS
        exclude:
          - os: macOS-latest
            arch: x86

    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@latest
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/julia-buildpkg@latest
      - uses: julia-actions/julia-runtest@latest
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v1
        with:
          file: ./lcov.info

  format:
    name: Format Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install JuliaFormatter
        run: julia -e 'using Pkg; Pkg.add("JuliaFormatter")'
      - name: Format Code
        run: julia -e 'using JuliaFormatter;format(".")'
      - name: Create pull request
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'style: format **.jl files by JuliaFormatter'
          title: 'Format by JuliaFormatter'
          branch: juliaformatter-pr/patch
          branch-suffix: timestamp
          delete-branch: true
          labels: formatting, automated pr

  docs:
    name: Deploy Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/julia-buildpkg@latest
      - uses: julia-actions/julia-docdeploy@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}

# vim:ts=2:sw=2
